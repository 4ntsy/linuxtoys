## linuxtoys function library
source /etc/os-release
source helpers.lib
export SUDO_ASKPASS="$SCRIPT_DIR/libs/zpass.sh"

# sudo request
sudo_rq () { 
    if [ -f /tmp/linuxtoys_sudo_validated ]; then
        return 0
    fi
    if command -v sudo-rs >&-;then
        _pass=$(zenity --password --title="LinuxToys")
	echo "${_pass}" | sudo-rs -Sv
    else
        sudo -Av
    fi
    if [ "$(sudo whoami)" = "root" ]; then
    # Validate password with sudo
        if [ -n "$LINUXTOYS_CHECKLIST" ]; then
            touch /tmp/linuxtoys_sudo_validated
        fi
        return 0
    else
        fatal "Wrong password. Do you have sudo?"
    fi
}

# zenity libs
zeninf () {
    zenity --info --text "$1" --width 360 --height 300
    return 0
}
zenwrn () {
    zenity --warning --text "$1" --width 360 --height 300
    return 0
}

## error handlers
fatal() {
    zenity --error --title "Fatal Error" --text "$1" --width 360 --height 300
    exit 1
}
nonfatal() {
    zenity --error --title "Error" --text "$1" --width 360 --height 300
    return 1
}

# native package installation
_install_ () {
    if [[ -n "$_packages" ]]; then
        # rpm-ostree iteration -- ONLY USE WHEN PACKAGES ARE NOT IMPORTANT TO THE SYSTEM!
        if command -v rpm-ostree &>/dev/null; then
            declare -a _to_install=()
            for pkg in "${_packages[@]}"; do
                if ! rpm -qi "$pkg" &>/dev/null; then
                    _to_install+=("$pkg")
                fi
            done
            if [[ -n "$_to_install" ]]; then
                for item in "${_to_install[@]}"; do
                    sudo rpm-ostree install -yA "$item"
                done
            else
                return 0
            fi
        else
        # resume usual linuxtoys behaviour
            if [[ "$ID_LIKE" == *debian* ]] || [[ "$ID_LIKE" == *ubuntu* ]] || [ "$ID" == "debian" ] || [ "$ID" == "ubuntu" ]; then
                for pak in "${_packages[@]}"; do
                    if dpkg -s "$pak" 2>/dev/null 1>&2; then
                        continue
                    else
                        sudo apt install -y "$pak"
                    fi
                done
            elif [[ "$ID" =~ ^(arch|cachyos)$ ]] || [[ "$ID_LIKE" == *arch* ]] || [[ "$ID_LIKE" == *archlinux* ]]; then
                for pak in "${_packages[@]}"; do
                    if pacman -Qi "$pak" 2>/dev/null 1>&2; then
                        continue
                    else
                        if pacman -Ss "$pak" | grep -q "$pak"; then
                            sudo pacman -S --noconfirm "$pak"
                        else
                            if zenity --question --title "Installer" --text "$msg305" --height=300 --width=300; then
                                if ! command -v paru &>/dev/null; then
                                    if pacman -Ss paru | grep -q paru; then
                                        sudo pacman -S --noconfirm paru
                                    else
                                        chaotic_aur_lib
                                        sleep 1
                                        sudo pacman -S --noconfirm paru
                                    fi
                                fi
                                paru -S -a --noconfirm --skipreview "$pak"
                            else
                                return 1
                            fi
                        fi
                    fi
                done
            elif [[ "$ID_LIKE" =~ (rhel|fedora) ]] || [[ "$ID" =~ (fedora) ]]; then
                for pak in "${_packages[@]}"; do
                    if rpm -qi "$pak" 2>/dev/null 1>&2; then
                        continue
                    else
                        sudo dnf in "$pak" -y
                    fi
                done
            elif [[ "$ID_LIKE" == *suse* ]] || [[ "$ID" == *suse* ]]; then
                for pak in "${_packages[@]}"; do
                    if rpm -qi "$pak" 2>/dev/null 1>&2; then
                        continue
                    else
                        sudo zypper in "$pak" -y
                    fi
                done
            fi
        fi
        unset _packages
    fi
}

# flatpak installer
_flatpak_ () {
    if [[ -n "$_flatpaks" ]]; then
        for flat in "${_flatpaks[@]}"; do
            flatpak install --or-update --user --noninteractive flathub "$flat"
        done
        unset _flatpaks
    fi
}

# language detect -- add elif for each language in the last if statement
_lang_ () {
    local lang="${LANG:0:2}"
    local available=("am" "ar" "bn" "cs" "de" "el" "en" "es" "fa" "fi" "fr" "he" "hi" "id" "it" "ja" "ko" "ms" "nl" "pl" "pt" "ru" "sv" "sw" "ta" "th" "tl" "tr" "uk" "ur" "vi" "zh" "bg" "bs" "da" "hr" "hu" "is" "no" "sk" "sl" "sr" "nb" "az" "lv" "ga" "ne" "my" "sq" "tg" "uz" "hy" "ka" "km" "lo" "mn" "ro" "et" "lt")
    local ulang=""
    langfile=""

    if [[ " ${available[*]} " == *"$lang"* ]]; then
        ulang="$lang"
    else
        ulang="en"
    fi
    langfile="$ulang"
}

# system detection
is_arch () {
    if [[ ("$ID" == "arch" || "$ID_LIKE" =~ "arch" || "$ID_LIKE" =~ "archlinux") && "$ID" != "cachyos" ]]; then
        return 0
    else
        return 1
    fi
}
is_cachy () {
    if [ "$ID" == "cachyos" ]; then
        return 0
    else
        return 1
    fi
}
is_fedora () {
    if [ "$ID" == "fedora" ] || [ "$ID" == "rhel" ] || [[ "$ID_LIKE" =~ "fedora" ]] || [[ "$ID_LIKE" =~ "rhel" ]] || [[ "$ID_LIKE" =~ "centos" ]] || [ "$ID" == "centos" ]; then
        if ! command -v rpm-ostree &>/dev/null; then
            return 0
        else
            return 1
        fi
    else
        return 1
    fi
}
is_ostree () {
    if [ "$ID" == "fedora" ] || [ "$ID" == "rhel" ] || [[ "$ID_LIKE" =~ "fedora" ]] || [[ "$ID_LIKE" =~ "rhel" ]] || [[ "$ID_LIKE" =~ "centos" ]] || [ "$ID" == "centos" ]; then
        if command -v rpm-ostree &>/dev/null; then
            return 0
        else
            return 1
        fi
    else
        return 1
    fi
}
is_debian () {
    if [ "$ID" == "debian" ] || [ "$ID" == "ubuntu" ] || [[ "$ID_LIKE" =~ "debian" ]] || [[ "$ID_LIKE" =~ "ubuntu" ]]; then
        return 0
    else
        return 1
    fi
}
is_ubuntu () {
    if [ "$ID" == "ubuntu" ] || [[ "$ID_LIKE" =~ "ubuntu" ]] || [[ "$ID_LIKE" =~ "debian" ]]; then
        return 0
    else
        return 1
    fi
}
is_suse () {
    if [ "$ID" == "suse" ] || [ "$ID" == "opensuse" ] || [[ "$ID_LIKE" =~ "suse" ]]; then
        return 0
    else
        return 1
    fi
}
