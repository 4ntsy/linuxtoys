# jetbrains installers
# pycharm
pycharm_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/python/pycharm-2025.1.1.1.tar.gz
    # first installation
    if [ ! -d "/opt/pycharm" ]; then
        tar -xvzf pycharm-2025.1.1.1.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "pycharm-*") pycharm
        sleep 1
        sudo cp -rf pycharm /opt
        rm pycharm-2025.1.1.1.tar.gz
        rm -rf pycharm
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/pycharm.desktop
        sudo cp pycharm.desktop /usr/share/applications
        rm pycharm.desktop
        if grep -q "alias pycharm=" ~/.bashrc; then
          return
        else
          echo "alias pycharm=\"/opt/pycharm/bin/pycharm\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf pycharm-2025.1.1.1.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "pycharm-*") pycharm
        sudo rm -rf /opt/pycharm
        sudo cp -rf pycharm /opt
        rm pycharm-2025.1.1.1.tar.gz
        rm -rf pycharm
    fi

}

# intellij idea
idea_ic () {

    cd $HOME
    # first installation
    if [ ! -d "/opt/idea-IC" ]; then
        wget https://download-cdn.jetbrains.com/idea/ideaIC-2025.1.1.1.tar.gz
        tar -xvzf ideaIC-2025.1.1.1.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "idea-IC*") idea-IC
        sleep 1
        sudo cp -rf idea-IC /opt
        rm ideaIC-2025.1.1.1.tar.gz
        rm -rf idea-IC
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/intellijce.desktop
        sudo cp intellijce.desktop /usr/share/applications
        rm intellijce.desktop
        if grep -q "alias idea-ce=" ~/.bashrc; then
          return
        else
          echo "alias idea-ce=\"/opt/idea-IC/bin/idea\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        wget https://download-cdn.jetbrains.com/idea/ideaIC-2025.1.1.1.tar.gz
        tar -xvzf ideaIC-2025.1.1.1.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "idea-IC*") idea-IC
        sudo rm -rf /opt/idea-IC
        sudo cp -rf idea-IC /opt
        rm ideaIC-2025.1.1.1.tar.gz
        rm -rf idea-IC
    fi

}

idea_iu () {

    cd $HOME
    # first installation
    if [ ! -d "/opt/idea-IU" ]; then
        wget https://download-cdn.jetbrains.com/idea/ideaIU-2025.1.1.1.tar.gz
        tar -xvzf ideaIU-2025.1.1.1.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "idea-IU*") idea-IU
        sleep 1
        sudo cp -rf idea-IU /opt
        rm -rf idea-IU
        rm ideaIU-2025.1.1.1.tar.gz
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/intellij.desktop
        sudo cp intellij.desktop /usr/share/applications
        rm intellij.desktop
        if grep -q "alias idea-ue=" ~/.bashrc; then
          return
        else
          echo "alias idea-ue=\"/opt/idea-IU/bin/idea\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        wget https://download-cdn.jetbrains.com/idea/ideaIU-2025.1.1.1.tar.gz
        tar -xvzf ideaIU-2025.1.1.1.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "idea-IU*") idea-IU
        sudo rm -rf /opt/idea-IU
        sudo cp -rf idea-IU /opt
        rm ideaIU-2025.1.1.1.tar.gz
        rm -rf idea-IU
    fi

}

# webstorm
webstorm_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/webstorm/WebStorm-2025.1.2.tar.gz
    # first installation
    if [ ! -d "/opt/WebStorm" ]; then
        tar -xvzf WebStorm-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "WebStorm-*") WebStorm
        sleep 1
        sudo cp -rf WebStorm /opt
        rm WebStorm-2025.1.2.tar.gz
        rm -rf WebStorm
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/webstorm.desktop
        sudo cp webstorm.desktop /usr/share/applications
        rm webstorm.desktop
        if grep -q "alias webstorm=" ~/.bashrc; then
          return
        else
          echo "alias webstorm=\"/opt/WebStorm/bin/webstorm\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf WebStorm-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "WebStorm-*") WebStorm
        sudo rm -rf /opt/WebStorm
        sudo cp -rf WebStorm /opt
        rm WebStorm-2025.1.2.tar.gz
        rm -rf WebStorm
    fi

}

# rider
rider_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/rider/JetBrains.Rider-2025.1.2.tar.gz
    # first installation
    if [ ! -d "/opt/rider" ]; then
        tar -xvzf JetBrains.Rider-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "JetBrains*") rider
        sleep 1
        sudo cp -rf rider /opt
        rm JetBrains.Rider-2025.1.2.tar.gz
        rm -rf rider
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/rider.desktop
        sudo cp rider.desktop /usr/share/applications
        rm rider.desktop
        if grep -q "alias rider=" ~/.bashrc; then
          return
        else
          echo "alias rider=\"/opt/rider/bin/rider\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf JetBrains.Rider-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "JetBrains*") rider
        sudo rm -rf /opt/rider
        sudo cp -rf rider /opt
        rm JetBrains.Rider-2025.1.2.tar.gz
        rm -rf rider
    fi

}

# clion
clion_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/cpp/CLion-2025.1.2.tar.gz
    # first installation
    if [ ! -d "/opt/clion" ]; then
        tar -xvzf CLion-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "clion-*") clion
        sleep 1
        sudo cp -rf clion /opt
        rm CLion-2025.1.2.tar.gz
        rm -rf clion
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/clion.desktop
        sudo cp clion.desktop /usr/share/applications
        rm clion.desktop
        if grep -q "alias clion=" ~/.bashrc; then
          return
        else
          echo "alias clion=\"/opt/clion/bin/clion\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf CLion-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "clion-*") clion
        sudo rm -rf /opt/clion
        sudo cp -rf clion /opt
        rm CLion-2025.1.2.tar.gz
        rm -rf clion
    fi

}

# rustrover
rustrover_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/rustrover/RustRover-2025.1.3.tar.gz
    # first installation
    if [ ! -d "/opt/rustrover" ]; then
        tar -xvzf RustRover-2025.1.3.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "RustRover-*") rustrover
        sleep 1
        sudo cp -rf rustrover /opt
        rm RustRover-2025.1.3.tar.gz
        rm -rf rustrover
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/rustrover.desktop
        sudo cp rustrover.desktop /usr/share/applications
        rm rustrover.desktop
        if grep -q "alias rustrover=" ~/.bashrc; then
          return
        else
          echo "alias rustrover=\"/opt/rustrover/bin/rustrover\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf RustRover-2025.1.3.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "RustRover-*") rustrover
        sudo rm -rf /opt/rustrover
        sudo cp -rf rustrover /opt
        rm RustRover-2025.1.3.tar.gz
        rm -rf rustrover
    fi

}

# rubymine
rubymine_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/ruby/RubyMine-2025.1.2.tar.gz
    # first installation
    if [ ! -d "/opt/rubymine" ]; then
        tar -xvzf RubyMine-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "RubyMine-*") rubymine
        sleep 1
        sudo cp -rf rubymine /opt
        rm RubyMine-2025.1.2.tar.gz
        rm -rf rubymine
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/rubymine.desktop
        sudo cp rubymine.desktop /usr/share/applications
        rm rubymine.desktop
        if grep -q "alias rubymine=" ~/.bashrc; then
          return
        else
          echo "alias rubymine=\"/opt/rubymine/bin/rubymine\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf RubyMine-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "RubyMine-*") rubymine
        sudo rm -rf /opt/rubymine
        sudo cp -rf rubymine /opt
        rm RubyMine-2025.1.2.tar.gz
        rm -rf rubymine
    fi

}

# datagrip
datagrip_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/datagrip/datagrip-2025.1.3.tar.gz
    # first installation
    if [ ! -d "/opt/datagrip" ]; then
        tar -xvzf datagrip-2025.1.3.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "DataGrip-*") datagrip
        sleep 1
        sudo cp -rf datagrip /opt
        rm datagrip-2025.1.3.tar.gz
        rm -rf datagrip
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/datagrip.desktop
        sudo cp datagrip.desktop /usr/share/applications
        rm datagrip.desktop
        if grep -q "alias datagrip=" ~/.bashrc; then
          return
        else
          echo "alias datagrip=\"/opt/datagrip/bin/datagrip\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf datagrip-2025.1.3.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "DataGrip-*") datagrip
        sudo rm -rf /opt/datagrip
        sudo cp -rf datagrip /opt
        rm datagrip-2025.1.3.tar.gz
        rm -rf datagrip
    fi

}

# phpstorm
phpstorm_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/webide/PhpStorm-2025.1.2.tar.gz
    # first installation
    if [ ! -d "/opt/phpstorm" ]; then
        tar -xvzf PhpStorm-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "PhpStorm-*") phpstorm
        sleep 1
        sudo cp -rf phpstorm /opt
        rm PhpStorm-2025.1.2.tar.gz
        rm -rf phpstorm
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/phpstorm.desktop
        sudo cp phpstorm.desktop /usr/share/applications
        rm phpstorm.desktop
        if grep -q "alias phpstorm=" ~/.bashrc; then
          return
        else
          echo "alias phpstorm=\"/opt/phpstorm/bin/phpstorm\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf PhpStorm-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "PhpStorm-*") phpstorm
        sudo rm -rf /opt/phpstorm
        sudo cp -rf phpstorm /opt
        rm PhpStorm-2025.1.2.tar.gz
        rm -rf phpstorm
    fi

}

# goland
goland_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/go/goland-2025.1.2.tar.gz
    # first installation
    if [ ! -d "/opt/goland" ]; then
        tar -xvzf goland-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "GoLand-*") goland
        sleep 1
        sudo cp -rf goland /opt
        rm goland-2025.1.2.tar.gz
        rm -rf goland
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/goland.desktop
        sudo cp goland.desktop /usr/share/applications
        rm goland.desktop
        if grep -q "alias goland=" ~/.bashrc; then
          return
        else
          echo "alias goland=\"/opt/goland/bin/goland\"" >> ~/.bashrc
          source ~/.bashrc
        fi
    else # update
        tar -xvzf goland-2025.1.2.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "GoLand-*") goland
        sudo rm -rf /opt/goland
        sudo cp -rf goland /opt
        rm goland-2025.1.2.tar.gz
        rm -rf goland
    fi

}

# toolbox
toolbox_in () {

    cd $HOME
    wget https://download-cdn.jetbrains.com/toolbox/jetbrains-toolbox-2.6.2.41321.tar.gz
    # first installation
    if [ ! -d "/opt/toolbox" ]; then
        if zenity --question --text "$msg174" --width 360 --height 300; then
            insta fuse
            tar -xvzf jetbrains-toolbox-2.6.2.41321.tar.gz
            sleep 1
            mv $(find . -maxdepth 1 -type d -name "jetbrains-*") toolbox
            sleep 1
            ./toolbox/jetbrains-toolbox --appimage-extract
            cd toolbox
            mv squashfs-root toolbox
            sudo cp -rf toolbox /opt
            cd ..
            rm jetbrains-toolbox-2.6.2.41321.tar.gz
            rm -rf toolbox
            wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/other/jetbrains/jetbrains-toolbox.desktop
            sudo cp jetbrains-toolbox.desktop /usr/share/applications
            rm jetbrains-toolbox.desktop
            if grep -q "alias toolbox=" ~/.bashrc; then
              return
            else
              echo "alias toolbox=\"/opt/toolbox/jetbrains-toolbox\"" >> ~/.bashrc
              source ~/.bashrc
            fi
        else
            zeninf "$msg175"
            return
        fi
    else # update
        tar -xvzf jetbrains-toolbox-2.6.2.41321.tar.gz
        sleep 1
        mv $(find . -maxdepth 1 -type d -name "jetbrains-*") toolbox
        sleep 1
        ./toolbox/jetbrains-toolbox --appimage-extract
        cd toolbox
        mv squashfs-root toolbox
        sudo cp -rf toolbox /opt
        cd ..
        rm jetbrains-toolbox-2.6.2.41321.tar.gz
        rm -rf toolbox
    fi

}