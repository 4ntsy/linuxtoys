## fastbash library
. /etc/os-release

# whiptail color palette
export NEWT_COLORS='
    root=white,black
    border=black,lightgray
    window=black,lightgray
    shadow=black,gray
    title=black,lightgray
    button=black,red
    actbutton=white,red
    checkbox=black,lightgray
    actcheckbox=black,red
    entry=black,lightgray
    label=black,lightgray
    listbox=black,lightgray
    actlistbox=black,red
    textbox=black,lightgray
    acttextbox=black,red
    helpline=white,red
    roottext=black,lightgray
'

# logger -- define variable 'logfile' as the full path to log file
_log_ () {

    exec 2> >(tee "$logfile" >&2)

}

# native package installation
_install_ () {
    
    if [[ -n "$_packages" ]]; then
        if [[ "$ID_LIKE" == *debian* ]] || [[ "$ID_LIKE" == *ubuntu* ]] || [ "$ID" == "debian" ] || [ "$ID" == "ubuntu" ]; then
            for pak in "${_packages[@]}"; do
                if [[ "$pak" =~ ^(steam|yes|code|pyenv)$ ]]; then
                    continue
                fi
                if dpkg -s "$pak" 2>/dev/null 1>&2; then
                    continue
                else
                    sudo apt install -y $pak
                fi
            done
        elif [[ "$ID" =~ ^(arch|cachyos)$ ]] || [[ "$ID_LIKE" == *arch* ]]; then
            for pak in "${_packages[@]}"; do
                if [[ "$pak" =~ ^(yes|openrazer|code|pyenv|unityhub|dotnet-sdk-9.0)$ ]]; then
                    continue
                fi
                if pacman -Qi "$pak" 2>/dev/null 1>&2; then
                    continue
                else
                    sudo pacman -S --noconfirm $pak
                fi
            done
        elif [[ "$ID_LIKE" =~ (rhel|fedora) ]] || [[ "$ID" =~ (fedora) ]]; then
            for pak in "${_packages[@]}"; do
                if [[ "$pak" =~ ^(yes|openrazer|code|pyenv)$ ]]; then
                    continue
                fi
                if rpm -qi "$pak" 2>/dev/null 1>&2; then
                    continue
                else
                    sudo dnf in $pak -y
                fi
            done
        elif [ "$ID_LIKE" == "suse" ] || [ "$ID" == "suse" ]; then
            for pak in "${_packages[@]}"; do
                if [[ "$pak" =~ ^(yes|openrazer|waydroid|code|pyenv|dotnet-sdk-9.0)$ ]]; then
                    continue
                fi
                if rpm -qi "$pak" 2>/dev/null 1>&2; then
                    continue
                else
                    sudo zypper in $pak -y
                fi
            done
        fi
    fi

}

# INSTAnt install
if [[ "$ID_LIKE" == *debian* ]] || [[ "$ID_LIKE" == *ubuntu* ]] || [ "$ID" == "debian" ] || [ "$ID" == "ubuntu" ]; then
    insta () {
        if [ "$#" -eq 0 ]; then
            return 1
        fi
        sudo apt install -y "$@"
    }
elif [[ "$ID" =~ ^(arch|cachyos)$ ]] || [[ "$ID_LIKE" == *arch* ]]; then
    insta () {
        if [ "$#" -eq 0 ]; then
            return 1
        fi
        sudo pacman -S --noconfirm "$@"
    }
elif [[ "$ID_LIKE" =~ (rhel|fedora) ]] || [ "$ID" == "fedora" ]; then
    insta () {
        if [ "$#" -eq 0 ]; then
            return 1
        fi
        sudo dnf in "$@" -y
    }
elif [ "$ID_LIKE" == "suse" ] || [ "$ID" == "suse" ]; then
    insta () {
        if [ "$#" -eq 0 ]; then
            return 1
        fi
        sudo zypper in "$@" -y
    }
fi

# flatpak installation
_flatpak_ () {

    if [[ -n "$_flatpaks" ]]; then
        for flat in "${_flatpaks[@]}"; do
            flatpak install --or-update -u -y $flat
        done
    fi

}

# language detect -- add elif for each language in the last if statement
_lang_ () {

    local lang="${LANG:0:2}"
    local available=("pt")
    local ulang=""
    langfile=""

    if [[ " ${available[*]} " == *"$lang"* ]]; then
        ulang="$lang"
    else
        ulang="en"
    fi
    if [ $ulang == "pt" ]; then
        langfile="pt"
    else
        langfile="en"
    fi

}

# subscript invoker ## TODO REWORK
_invoke_ () {

    if [[ -n "$supmenu" ]]; then
        bash <(curl -s https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/supermenus/${supmenu}.sh)
    elif [[ -n "$subscript" ]]; then
        bash <(curl -s https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/subscripts/${subscript}.sh)
    fi

}

# wraps all commands in a function in sudo -- usage: _root_ function_name
_root_ () {

    if [ $# -eq 0 ]; then
        return 1
    fi

    local cmd=("$@")

    # Check if already root
    if [ "$(id -u)" -eq 0 ]; then
        "${cmd[@]}"
    else
        sudo bash -c "$(declare -f "${cmd[0]}") ; ${cmd[*]}"
    fi

}

# whiptail messagebox
_msgbox_ () {

    whiptail --title "$title" --msgbox "$msg" 12 78

}

## non-fastbash functions can be added HERE

# add chaotic aur to arch repos
chaotic_aur_lib () {

    if [[ "$ID" =~ ^(arch|cachyos)$ ]] || [[ "$ID_LIKE" == *arch* ]]; then
        cd $HOME
        sudo pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
        sudo pacman-key --lsign-key 3056513887B78AEB
        sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'
        sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'
        wget https://raw.githubusercontent.com/psygreg/linuxtoys/refs/heads/main/src/resources/subscripts/script.sed
        sudo sed -i -f script.sed /etc/pacman.conf
        sudo pacman -Sy
        whiptail --title "$msg023" --msgbox "$msg024" 8 78
        rm script.sed
    else
        whiptail --title "$msg030" --msgbox "$msg077" 8 78
    fi

}

# flatpak enabler
flatpak_in_lib () {

    if command -v flatpak &> /dev/null; then
        whiptail --title "$msg013" --msgbox "$msg015" 8 78
    else
        if [[ "$ID_LIKE" == *debian* ]] || [[ "$ID_LIKE" == *ubuntu* ]] || [ "$ID" == "debian" ] || [ "$ID" == "ubuntu" ]; then
            sudo apt install -y flatpak
        elif [[ "$ID" =~ ^(arch|cachyos)$ ]] || [[ "$ID_LIKE" == *arch* ]]; then
            sudo pacman -S --noconfirm flatpak
        fi
        flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
        flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo --system
    fi

}